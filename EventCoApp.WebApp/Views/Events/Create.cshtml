@model EventViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="about-banner relative">
    <div class="row d-flex align-items-center justify-content-center">
        <div class="container">
            <div class="row d-flex align-items-center justify-content-center">
                <div class="about-content col-lg-12">
                </div>
            </div>
        </div>
    </div>
</section>
<div class="container">
    <div class="row">
        <div class="col text-center">
            <h1>Create Event</h1>
            <hr />
        </div>
    </div>
    <form enctype="multipart/form-data" method="post">
        <div class="row">
            <div class="col-md-6">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.EditorFor(m => m.Name, additionalViewData: new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Description)
                    @Html.EditorFor(m => m.Description, additionalViewData: new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.LocationId)
                    @Html.DropDownListFor(m => m.LocationId, Model.Locations, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.EventTypeId)
                    @Html.DropDownListFor(m => m.EventTypeId, Model.EventTypes, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.When)
                    @Html.EditorFor(m => m.When, additionalViewData: new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.When, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.TicketPrice)
                    @Html.EditorFor(m => m.TicketPrice, additionalViewData: new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.TicketPrice, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.TicketCount)
                    @Html.EditorFor(m => m.TicketCount, additionalViewData: new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.TicketCount, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Images)
                    <input asp-for="ImagesFiles" type="file" multiple class="form-control" />
                    @Html.ValidationMessageFor(m => m.ImagesFiles, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col text-center">
                        <input type="submit" value="Create" class="primary-btn text-uppercase" />

                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
