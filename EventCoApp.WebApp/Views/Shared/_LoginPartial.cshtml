@using Microsoft.AspNetCore.Identity
@inject SignInManager<EventCoApp.DataAccessLibrary.Models.User> SignInManager
@inject UserManager<EventCoApp.DataAccessLibrary.Models.User> UserManager


@if (SignInManager.IsSignedIn(User))
{
    <li>
        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
    </li>
    <li>
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li>
        <a asp-area="Identity" asp-page="/Account/Register">Register for booking</a>
    </li>
    <li>
        <a asp-area="Identity" asp-page="/Account/RegisterForCreating">Register for creating</a>
    </li>
    <li>
        <a asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
@if (User.IsInRole("Master"))
{
    <li>
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Roles
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                <input class="dropdown-item" type="button" value="Create" onclick="location.href='@Url.ActionLink("Create","Roles", new { area = "" }, null)'" />
                <input class="dropdown-item" type="button" value="View" onclick="location.href='@Url.ActionLink("Index", "Roles", new { area = "" }, null)'" />
            </div>
        </div>
    </li>
}

